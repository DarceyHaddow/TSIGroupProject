/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.JList;
import java.text.DecimalFormat;
import javax.swing.JLabel;
import javax.swing.JTextField;



public class EposUI extends javax.swing.JFrame {
    //declaring variables
    DefaultListModel productListModel = new DefaultListModel();
    ArrayList<Double> totalOrderCollection = new ArrayList<Double>();

    CurrentOrder currentOrder = new CurrentOrder();

    private javax.swing.JList<String> lstOrders;
    public EposUI() {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        pnlOrder = new javax.swing.JPanel();
        cmboProductPrice = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtOrder = new javax.swing.JTextArea();
        btnAdd = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        lblTotal = new javax.swing.JLabel();
        btnCheckout = new javax.swing.JButton();
        spinnerQuantity = new javax.swing.JSpinner();
        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        pnlReports = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtEndOfDayReport = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Patisserie Parfait");
        setBounds(new java.awt.Rectangle(0, 0, 0, 628));
        setMaximumSize(new java.awt.Dimension(2147483647, 628));
        setPreferredSize(new java.awt.Dimension(883, 628));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jTabbedPane1.setBackground(new java.awt.Color(70, 81, 181));
        jTabbedPane1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jTabbedPane1.setFont(new java.awt.Font("Segoe UI Symbol", 1, 18)); // NOI18N

        pnlOrder.setBackground(new java.awt.Color(131, 155, 220));
        pnlOrder.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        pnlOrder.setMinimumSize(new java.awt.Dimension(0, 625));
        pnlOrder.setPreferredSize(new java.awt.Dimension(883, 625));

        cmboProductPrice.setFont(new java.awt.Font("Segoe UI Historic", 1, 18)); // NOI18N
        cmboProductPrice.setAlignmentX(0.0F);
        cmboProductPrice.setAlignmentY(0.0F);
        cmboProductPrice.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        txtOrder.setColumns(20);
        txtOrder.setRows(5);
        jScrollPane1.setViewportView(txtOrder);

        btnAdd.setBackground(new java.awt.Color(74, 232, 68));
        btnAdd.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnAdd.setText("Add");
        btnAdd.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnCancel.setBackground(new java.awt.Color(240, 100, 100));
        btnCancel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnCancel.setText("Cancel");
        btnCancel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        lblTotal.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblTotal.setForeground(new java.awt.Color(255, 255, 255));
        lblTotal.setText("Total: Â£");
        lblTotal.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 2));

        btnCheckout.setBackground(new java.awt.Color(39, 23, 121));
        btnCheckout.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnCheckout.setForeground(new java.awt.Color(255, 255, 255));
        btnCheckout.setText("Checkout");
        btnCheckout.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCheckout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCheckoutActionPerformed(evt);
            }
        });

        spinnerQuantity.setFont(new java.awt.Font("Segoe UI Symbol", 0, 24)); // NOI18N
        spinnerQuantity.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jTextField1.setFont(new java.awt.Font("Lucida Calligraphy", 1, 24)); // NOI18N
        jTextField1.setForeground(new java.awt.Color(70, 81, 181));
        jTextField1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField1.setText("We put the 'ooh la la' in every pastry we make!");
        jTextField1.setToolTipText("");
        jTextField1.setOpaque(true);
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jLabel1.setText(" ");

        javax.swing.GroupLayout pnlOrderLayout = new javax.swing.GroupLayout(pnlOrder);
        pnlOrder.setLayout(pnlOrderLayout);
        pnlOrderLayout.setHorizontalGroup(
            pnlOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTextField1)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlOrderLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlOrderLayout.createSequentialGroup()
                        .addComponent(spinnerQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addComponent(cmboProductPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlOrderLayout.createSequentialGroup()
                        .addComponent(lblTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnCheckout, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12))
        );
        pnlOrderLayout.setVerticalGroup(
            pnlOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlOrderLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(pnlOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd)
                    .addComponent(btnCancel)
                    .addComponent(jLabel1)
                    .addComponent(cmboProductPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spinnerQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(pnlOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlOrderLayout.createSequentialGroup()
                        .addGap(131, 131, 131)
                        .addComponent(btnCheckout, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(111, 111, 111))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlOrderLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addComponent(lblTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(116, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Order", pnlOrder);

        txtEndOfDayReport.setColumns(20);
        txtEndOfDayReport.setRows(5);
        jScrollPane2.setViewportView(txtEndOfDayReport);

        javax.swing.GroupLayout pnlReportsLayout = new javax.swing.GroupLayout(pnlReports);
        pnlReports.setLayout(pnlReportsLayout);
        pnlReportsLayout.setHorizontalGroup(
            pnlReportsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlReportsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 871, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlReportsLayout.setVerticalGroup(
            pnlReportsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlReportsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 658, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Reports", pnlReports);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 628, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    private static final DecimalFormat df = new DecimalFormat("0.00");
    
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened


        currentOrder.initaliseCurrentOrder();

        login();
        //this populates the quantity combo box
        // refactored to use the quantity class
            
        spinnerQuantity.setValue(1);

        //this populates the product and price combo box

                try 
            {
                Connection con = DriverManager.getConnection ("jdbc:ucanaccess://Data\\Products.accdb"); 
                Statement stmt = con.createStatement();
                ResultSet rs = stmt.executeQuery ("SELECT * FROM ProductsPrices");
                while (rs.next()) 
                {        
                    Product product;
                    product = new Product(rs.getDouble("Price"), rs.getString("Product"));
                    cmboProductPrice.addItem(rs.getString("Product")+": Â£" +rs.getDouble("Price"));
                }
            }
         catch(SQLException e)
            {
                System.out.println("SQL exception occured" + e);
                
            }



    }//GEN-LAST:event_formWindowOpened

    private void btnCheckoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCheckoutActionPerformed

        //this resets and clears the frame back to its original state
        setFrame("","",0,0);
    
    //this adds the current order to the arraylist
    totalOrderCollection.add(currentOrder.getCurrentOrder());
    
    //defining variables
    Double orderTotal = 0.0;
    Double totalSales = 0.0;
    Double atv = 0.0;
    Double min = currentOrder.getCurrentOrder();
    Double max = 0.0;
    
    //this counts the number of items in the array (or customers)
    for(int i=0;i<totalOrderCollection.size();i++)
    {
    totalSales+=totalOrderCollection.get(i);
    }
    
    //this calculates the average sale value
    atv = totalSales/totalOrderCollection.size();
    
    //this compares each element in the array to find the min and max
     for(Double currentOrder : totalOrderCollection)
    {   
        orderTotal = orderTotal + currentOrder;
        
        if(currentOrder>max)
        {
            max = currentOrder;
        }
        
        if(currentOrder<min)
        {
            min = currentOrder;
        }
         
    }
    
    //this prints information to the report screen
    txtEndOfDayReport.append("Total sales takings: Â£" + df.format(orderTotal) +"\n");
    txtEndOfDayReport.append("Total customers: " + String.valueOf(totalOrderCollection.size())+"\n");
    txtEndOfDayReport.append("Average transaction value: Â£" + df.format(atv) +"\n");
    txtEndOfDayReport.append("Maximum spend: Â£" + df.format(max) +"\n");
    txtEndOfDayReport.append("Minimum spend: Â£" + df.format(min) +"\n");
    
    txtOrder.setText(null);
    JOptionPane.showMessageDialog(this, "Your total is: Â£" + df.format(currentOrder.getCurrentOrder()) + "\nThank you for your order");
    
    currentOrder.initaliseCurrentOrder();
    }//GEN-LAST:event_btnCheckoutActionPerformed


    private void setFrame(String reportText, String lblText, int productPrice, int quantity) {
        txtEndOfDayReport.setText(reportText);
        lblTotal.setText(lblText);
        cmboProductPrice.setSelectedIndex(productPrice);
        spinnerQuantity.setValue(1);
    }



    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
    //this resets and clears the frame back to its original state
    if(evt.getSource()==btnCancel)
    {
        setFrame(null,"",0,0);
        txtOrder.setText("");
        currentOrder.initaliseCurrentOrder();
    }
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
    //this defines the colon postiion
    int cp = cmboProductPrice.getSelectedItem().toString().indexOf(":");
    //this pulls the quantity, product and price from the combo boxes into the text field
    txtOrder.append((String) spinnerQuantity.getValue().toString() + "x ");
    txtOrder.append((String) cmboProductPrice.getSelectedItem() + "\n");
    
    //this extracts prices from the product price combo box and multiplies them by their respective quantities 
    double price = Double.parseDouble(cmboProductPrice.getSelectedItem().toString().substring(cp+3));
    int productQuantity = Integer.parseInt(spinnerQuantity.getValue().toString());
    double productPriceCost = price*productQuantity;
    
    //this totals all the quantities*products
    currentOrder.currentOrderValue(productPriceCost);
    //this writes the running total order cost to screen
    lblTotal.setText("Total: " + currentOrder.outputCurrentOrder());
    }//GEN-LAST:event_btnAddActionPerformed

<<<<<<< HEAD:src/my/epos/EposUI.java
    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    
    private void login() {
=======
    public String getReturnState(String returnState){
        return(returnState);
    }
    protected String login() {
        String returnState = "No process occured";
>>>>>>> 89a2dc40222d96ebac88b9761fd6ac7bf18951b3:src/main/java/EposUI.java
        JLabel label_login = new JLabel("Employee ID:");
        JTextField login = new JTextField();

        Object[] login_GUI_Elements = {label_login, login};

        int userInteraction = JOptionPane.showConfirmDialog(null, login_GUI_Elements, "Login",
        JOptionPane.OK_CANCEL_OPTION,
        JOptionPane.PLAIN_MESSAGE);

        Boolean entryGranted = false;

        if (userInteraction == JOptionPane.OK_OPTION)
        {
            String user = login.getText().trim();
            if ((user.equals ("1234")))
            {
                JOptionPane.showMessageDialog(this, "Logged in as " + user);
                entryGranted=true;
                returnState = "Logged in";
            }
            else
            {
                JOptionPane.showMessageDialog(this, "Entry denied");
                returnState = "Entry Denied";
            }
        }


        if (!entryGranted || (userInteraction == JOptionPane.CANCEL_OPTION) || (userInteraction == JOptionPane.CLOSED_OPTION))
            {
                JOptionPane.showMessageDialog(this, "You have not supplied valid credentials\nThe application will now terminate");
                System.exit(0);
                returnState = "You have not supplied valid credentials";
            }

        return getReturnState(returnState);
        //return(entryGranted);
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EposUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EposUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EposUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EposUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EposUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnCheckout;
    private javax.swing.JComboBox<String> cmboProductPrice;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JLabel lblTotal;
    private javax.swing.JPanel pnlOrder;
    private javax.swing.JPanel pnlReports;
    private javax.swing.JSpinner spinnerQuantity;
    private javax.swing.JTextArea txtEndOfDayReport;
    private javax.swing.JTextArea txtOrder;
    // End of variables declaration//GEN-END:variables
}
